{
    "read_employee_route": {
        "project": "read_employee_route",
        "project description": "Read employee details by employee id",
        "url": "/admin/personal/{employee_id}",
        "method": "GET",
        "payload": {
            "employee_id": {
                "description": "Employee ID to read the employee details",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "update_employee_data": {
        "project": "update_employee_data",
        "project description": "Update employee details by employee id",
        "url": "/admin/employees/{employee_id}",
        "method": "PUT",
        "payload": {
            "firstname": {
                "description": "First name of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "lastname": {
                "description": "Last name of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "dateofbirth": {
                "description": "Date of birth of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "contactnumber": {
                "description": "Contact number of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "emailaddress": {
                "description": "Email address of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "address": {
                "description": "Address of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "nationality": {
                "description": "Nationality of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "gender": {
                "description": "Gender of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "maritalstatus": {
                "description": "Marital status of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "delete_employee_route": {
        "project": "delete_employee_route",
        "project description": "Delete employee by employee id",
        "url": "/admin/employees/{employee_id}",
        "method": "DELETE",
        "payload": {}
    },
    "create_employee": {
        "project": "create_employee",
        "project description": "Create a new employee record",
        "url": "/admin/employees/",
        "method": "POST",
        "payload": {
            "employee_email": {
                "description": "Email address of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "job_position": {
                "description": "Job position of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "department": {
                "description": "Department of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "start_date": {
                "description": "Start date of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "employment_type": {
                "description": "Employment type of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "reporting_manager": {
                "description": "Reporting manager of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "work_location": {
                "description": "Work location of the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "basic_salary": {
                "description": "Basic salary of the employee",
                "datatype": "float",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "password": {
                "description": "Password for the employee",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "read_employee": {
        "project": "read_employee",
        "project description": "Read employee details by employee id",
        "url": "/admin/employees/{employee_id}",
        "method": "GET",
        "payload": {}
    },
    "update_employee_admin": {
        "project": "update_employee_admin",
        "project description": "Update employee details by admin",
        "url": "/admin/employees/update/admin",
        "method": "PUT",
        "payload": {
            "employee_email": {
                "description": "Email address of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "job_position": {
                "description": "Job position of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "department": {
                "description": "Department of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "start_date": {
                "description": "Start date of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "employment_type": {
                "description": "Employment type of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "reporting_manager": {
                "description": "Reporting manager of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "work_location": {
                "description": "Work location of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "basic_salary": {
                "description": "Basic salary of the employee",
                "datatype": "float",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "is_active": {
                "description": "Active status of the employee",
                "datatype": "boolean",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "releave_date": {
                "description": "Releave date of the employee",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "delete_employee_details": {
        "project": "delete_employee_details",
        "project description": "Delete employee details by employee id",
        "url": "/admin/employees/{employee_id}",
        "method": "DELETE",
        "payload": {}
    },
    "get_leave_by": {
        "project": "get_leave_by",
        "project description": "Get pending leave by employee id",
        "url": "/admin/pending/leave/{employee_id}",
        "method": "GET",
        "payload": {}
    },
    "get_leave_by_month": {
        "project": "get_leave_by_month",
        "project description": "Get leave details for the specified month and year by employee id",
        "url": "/admin/{monthnumber}/{yearnumber}/{employee_id}",
        "method": "GET",
        "payload": {
            "monthnumber": {
                "description": "Month number for leave retrieval",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "yearnumber": {
                "description": "Year number for leave retrieval",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "employee_id": {
                "description": "Employee ID to get leave details",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "get_leaves_by_employee": {
        "project": "get_leaves_by_employee",
        "project description": "Get all leaves by employee id",
        "url": "/admin/leaves/{employee_id}",
        "method": "GET",
        "payload": {}
    },
    "delete_leave": {
        "project": "delete_leave",
        "project description": "Delete leave by leave id",
        "url": "/admin/{leave_id}",
        "method": "DELETE",
        "payload": {
            "leave_id": {
                "description": "Leave ID to delete the leave record",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "update_leave": {
        "project": "update_leave",
        "project description": "Update leave status",
        "url": "/leave/admin/teamlead/update",
        "method": "PUT",
        "payload": {
            "leave_id": {
                "description": "Leave ID to update",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "status": {
                "description": "Leave status to update",
                "datatype": "enum",
                "required": true,
                "validation": [
                    "pending",
                    "approved",
                    "rejected"
                ],
                "format": [
                    "pending",
                    "approved",
                    "rejected"
                ],
                "assigned": "None"
            },
            "reason": {
                "description": "Reason for leave update",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "create_leave_calendar": {
        "project": "create_leave_calendar",
        "project description": "Create leave calendar",
        "url": "/admin/calender",
        "method": "POST",
        "payload": {}
    },
    "get_leave_calendar": {
        "project": "get_leave_calendar",
        "project description": "Get leave calendar by employee id",
        "url": "/admin/calender/{employee_id}",
        "method": "GET",
        "payload": {
            "employee_id": {
                "description": "Employee ID to get leave calendar",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "apply_leave": {
        "project": "apply_leave",
        "project description": "Apply for leave",
        "url": "/leave/",
        "method": "POST",
        "payload": {
            "start_date": {
                "description": "Start date for leave",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "end_date": {
                "description": "End date for leave",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "leave_type": {
                "description": "Type of leave",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "reason": {
                "description": "Reason for leave",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "other_entires": {
                "description": "Other entries for leave",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "create_role": {
        "project": "create_role",
        "project description": "Create a new role for admin",
        "url": "/admin/roles",
        "method": "POST",
        "payload": {
            "name": {
                "description": "Name of the role to create",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "delete_role": {
        "project": "delete_role",
        "project description": "Delete a role by role id",
        "url": "/admin/roles/{role_id}",
        "method": "DELETE",
        "payload": {}
    },
    "update_role": {
        "project": "update_role",
        "project description": "Update a role by role id",
        "url": "/admin/roles",
        "method": "PUT",
        "payload": {
            "role_id": {
                "description": "Role ID of the role to update",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "name": {
                "description": "New name of the role",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "get_roles": {
        "project": "get_roles",
        "project description": "Get all roles",
        "url": "/admin/roles",
        "method": "GET",
        "payload": {}
    },
    "assign_role_to_employee": {
        "project": "assign_role_to_employee",
        "project description": "Assign a role to an employee",
        "url": "/admin/roles/employee/role",
        "method": "POST",
        "payload": {
            "employee_id": {
                "description": "Employee ID to assign role to",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "role_id": {
                "description": "Role ID to assign to employee",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "create_new_role_function": {
        "project": "create_new_role_function",
        "project description": "Create a new function for a role",
        "url": "/admin/roles/functions",
        "method": "POST",
        "payload": {
            "role_id": {
                "description": "Role ID to assign function to",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "function_id": {
                "description": "Function ID to assign to role",
                "datatype": "integer",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "permission": {
                "description": "Permission level for the function",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            }
        }
    },
    "read_role_functions": {
        "project": "read_role_functions",
        "project description": "Get all functions assigned to a role by role id",
        "url": "/admin/roles/{role_id}/functions",
        "method": "GET",
        "payload": {}
    },
    "delete_existing_role_function": {
        "project": "delete_existing_role_function",
        "project description": "Delete existing function of role by function id",
        "url": "/admin/roles/functions/{id}",
        "method": "DELETE",
        "payload": {}
    },
    "create_user": {
        "project": "create_user",
        "project description": "Create a new user with provided username, email, password, and role",
        "url": "/user",
        "method": "POST",
        "payload": {
            "username": {
                "description": "Username of the user to be created",
                "datatype": "string",
                "required": true,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "email": {
                "description": "Email address of the user to be created",
                "datatype": "string",
                "required": true,
                "validation": "valid email format",
                "format": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                "assigned": "None"
            },
            "password": {
                "description": "Password of the user to be created",
                "datatype": "string",
                "required": true,
                "validation": "at least 8 characters long",
                "format": "^.{8,}$",
                "assigned": "None"
            },
            "role": {
                "description": "Role of the user to be created",
                "datatype": "enum",
                "required": true,
                "validation": [
                    "admin",
                    "employee"
                ],
                "format": [
                    "admin",
                    "employee"
                ],
                "assigned": "None"
            }
        }
    },
    "get_user_by_id": {
        "project": "get_user_by_id",
        "project description": "Retrieve user details based on the provided user_id",
        "url": "/user/{user_id}",
        "method": "GET",
        "payload": {}
    },
    "update_user": {
        "project": "update_user",
        "project description": "Update user details based on the provided user_id",
        "url": "/user/{user_id}",
        "method": "PUT",
        "payload": {
            "username": {
                "description": "New username for the user",
                "datatype": "string",
                "required": false,
                "validation": "None",
                "format": "None",
                "assigned": "None"
            },
            "email": {
                "description": "New email address for the user",
                "datatype": "string",
                "required": false,
                "validation": "valid email format",
                "format": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                "assigned": "None"
            },
            "password": {
                "description": "New password for the user",
                "datatype": "string",
                "required": false,
                "validation": "at least 8 characters long",
                "format": "^.{8,}$",
                "assigned": "None"
            },
            "role": {
                "description": "New role for the user",
                "datatype": "enum",
                "required": false,
                "validation": [
                    "admin",
                    "employee"
                ],
                "format": [
                    "admin",
                    "employee"
                ],
                "assigned": "None"
            }
        }
    },
    "delete_user": {
        "project": "delete_user",
        "project description": "Delete user details based on the provided user_id",
        "url": "/user/{user_id}",
        "method": "DELETE",
        "payload": {}
    }
}